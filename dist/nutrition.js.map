{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/index.js","nutrition.js","src/js/carbController.js","src/js/carbFactory.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"CarbController","CarbFactory","angular","module","factory","controller","./carbController","./carbFactory",2,"success","data","vm","food","concat","results","error","httpError","cf","this","search","prevSearch","words","weight","then","loadMore","getNext","next","clear",3,"calcMacro","macro","isPercentage","Math","round","Number","toFixed","processResults","mass","none","foods","more","undefined","links","unit","map","name","carbs","carbohydrate","$http","$location","findFood","url","get","res","OK","status","defaults","useXDomain","headers","common","isLocal","host","localhost","webhost","terms","split","filter","word","join","req"],"mappings":"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","file":"nutrition.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var CarbController = require('./carbController');\nvar CarbFactory = require('./carbFactory');\n\nangular.module('nutrition', [])\n  .factory('CarbFactory', ['$http', '$location', CarbFactory])\n  .controller('CarbController', ['CarbFactory', CarbController])\n",null,"module.exports = CarbController;\n\nfunction CarbController(CarbFactory) {\n  var cf = CarbFactory;\n  var vm = this;\n\n  vm.httpError = false;\n  vm.food = [];\n\n  function success(data) {\n    vm.food = vm.food.concat(data.food);\n    vm.results = data.results;\n  }\n\n  function error(res) {\n    vm.httpError = true;\n    vm.food = [];\n    vm.results = {};\n  }\n\n  vm.search = function() {\n    vm.httpError = false;\n    vm.prevSearch = vm.words;\n    // success callback concats\n    vm.food = [];\n    cf.search(vm.words, vm.weight)\n      .then(success, error);\n  };\n\n  vm.loadMore = function() {\n    vm.httpError = false;\n    cf.getNext(vm.results.next, vm.weight)\n      .then(success, error);\n  };\n\n  vm.clear = function(form) {\n    vm.httpError = false;\n    vm.food = [];\n    vm.results = {};\n  };\n}\n","module.exports = CarbFactory;\n\nfunction calcMacro(macro, weight, isPercentage) {\n  if (isPercentage) {\n    return Math.round(macro * weight * 100);\n  } else {\n    return Number(macro * weight).toFixed(2);\n  }\n}\n\nfunction processResults(data, mass, isPercentage) {\n  return {\n    results: {\n      none: (data.foods.length === 0),\n      more: (data.links.next !== undefined),\n      unit: isPercentage ? '%' : 'g',\n      next: data.links.next\n    },\n    food: data.foods.map(function(food) {\n      return {\n        name: food.name,\n        carbs: calcMacro(food.carbohydrate, mass, isPercentage)\n      }\n    })\n  }\n}\n\nfunction CarbFactory($http, $location) {\n\n  // CORS stuff\n  $http.defaults.useXDomain = true;\n  delete $http.defaults.headers.common['X-Requested-With'];\n\n  var isLocal = ($location.host() === 'localhost');\n  var localhost = 'http://localhost/nutrition/';\n  var webhost = 'https://api.damonmcminn.com/nutrition/';\n  var host = (isLocal ? localhost : webhost);\n  \n\n  function findFood(url, weight) {\n    var isPercentage = (weight === undefined);\n    var mass = weight || 1;\n\n    return $http.get(url)\n      .then(function(res) {\n        var OK = (res.status === 200);\n        return OK ? processResults(res.data, mass, isPercentage) : {};\n      });\n  }\n\n  return {\n    search: function(search, weight) {\n      // 'polar bear' -> 'polar-bear'\n      // 'polar     bear' -> 'polar-bear'\n      var terms = search.split(' ')\n        .filter(function(word) {\n          return word.length > 0;\n        })\n        .join('-');            \n      var req = host + terms;\n      return findFood(req, weight);\n    },\n    getNext: findFood,\n  }\n}\n"],"sourceRoot":"/source/"}